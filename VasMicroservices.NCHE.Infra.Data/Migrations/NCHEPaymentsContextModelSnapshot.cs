// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VasMicroservices.NCHE.Infra.Data.Contexts;

#nullable disable

namespace VasMicroservices.NCHE.Infra.Data.Migrations
{
    [DbContext(typeof(NCHEPaymentsContext))]
    partial class NCHEPaymentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VasMicroservices.NCHE.Infra.Data.Entities.EndpointLog", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"), 1L, 1);

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RawRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RawResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Success")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.ToTable("EndpointLogs");
                });

            modelBuilder.Entity("VasMicroservices.NCHE.Infra.Data.Entities.VasOfsLog", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"), 1L, 1);

                    b.Property<string>("DebitAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfscompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ofsmessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ofsrequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ofsresponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Ofssuccess")
                        .HasColumnType("tinyint");

                    b.Property<string>("TellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxnRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VasPaymentId")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("VasPaymentId")
                        .IsUnique();

                    b.ToTable("VasOfsLog");
                });

            modelBuilder.Entity("VasMicroservices.NCHE.Infra.Data.Entities.VasPayment", b =>
                {
                    b.Property<int>("VasPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VasPaymentId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NcheTxnRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NchestatusCode")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Reversed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReversedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VasPaymentId");

                    b.ToTable("VasPayments");
                });

            modelBuilder.Entity("VasMicroservices.NCHE.Infra.Data.Entities.VasOfsLog", b =>
                {
                    b.HasOne("VasMicroservices.NCHE.Infra.Data.Entities.VasPayment", "VasPayment")
                        .WithOne("OfsLog")
                        .HasForeignKey("VasMicroservices.NCHE.Infra.Data.Entities.VasOfsLog", "VasPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VasPayment");
                });

            modelBuilder.Entity("VasMicroservices.NCHE.Infra.Data.Entities.VasPayment", b =>
                {
                    b.Navigation("OfsLog");
                });
#pragma warning restore 612, 618
        }
    }
}
